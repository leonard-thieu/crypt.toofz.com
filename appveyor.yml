version: 2.0.{build}
image: Visual Studio 2017

configuration:
  - Release
environment:
  PROJECT: toofz.NecroDancer.WebClient
  COVERALLS_REPO_TOKEN:
    secure: RgfMtQ0AdNtC/Jr6cnC/8OZJBfj8VrRXa7yxcHdRrm0Gkch+6q2lUVXDUbz0BxTH
  COVERALLS_SERVICE_NAME: appveyor
  COVERALLS_SERVICE_JOB_ID: '%APPVEYOR_JOB_ID%'
build:
  project: $(PROJECT).sln
  publish_wap: true
  verbosity: minimal
cache:
  - packages -> **\packages.config
  - '%APPDATA%\npm-cache'
notifications:
  - provider: Slack
    incoming_webhook:
      secure: c7l1UmXHWpIDLL1awU4r0QYVPToYM/XjV8trFyD1oHArKxs/vBTYiKYScr1EhCUgmEX6sAFBTvkUHF/k5B+cGjzqRBR2XkAO+lzk8cHQ1FI=

install:
  - ps: Update-NodeJsInstallation (Get-NodeJsLatestBuild 8)
  - npm install --global npm
  - node --version
  - npm --version

before_build:
  - appveyor-retry nuget restore -DisableParallelProcessing
  - cd %PROJECT%
  - npm install
  - npm run build
  - cd ..

test_script:
  - ps: |
      cd $env:PROJECT

      $env:PATH = $env:PATH + ';' + (Resolve-Path ./node_modules/.bin).Path
      npm run build
      if ($LASTEXITCODE -ne 0) { throw "Execution failed with exit code $LASTEXITCODE" }
      electron-mocha --opts tests/mocha-appveyor.opts
      if ($LASTEXITCODE -ne 0) { throw "Execution failed with exit code $LASTEXITCODE" }
      remap-istanbul -i ./coverage/coverage-final.json -o ./coverage/coverage-final.json
      if ($LASTEXITCODE -ne 0) { throw "Execution failed with exit code $LASTEXITCODE" }
      istanbul report --report lcovonly
      if ($LASTEXITCODE -ne 0) { throw "Execution failed with exit code $LASTEXITCODE" }
      Get-Content ./coverage/lcov.info | coveralls
      if ($LASTEXITCODE -ne 0) { throw "Execution failed with exit code $LASTEXITCODE" }

      cd..
